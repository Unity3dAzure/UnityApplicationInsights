using System;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace UnityApplicationInsights
{
  // The row properties are composed of the projected fields generated by the Kusto query
  [JsonConverter (typeof (RowTargetTotalConverter))]
  public class RowTargetTotal
  {
    public string target { get; set; }
    public int total { get; set; }
  }

  // Row Converter to convert mixed array values into a defined object type
  public class RowTargetTotalConverter : JsonConverter
  {
    public string name;
    public int total;

    public override bool CanConvert (Type objectType)
    {
      return (objectType == typeof (RowTargetTotal));
    }

    public override object ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
    {
      JArray a = JArray.Load (reader);
      RowTargetTotal row = new RowTargetTotal ();
      row.target = (string) a[0];
      row.total = (int) a[1];
      return row;
    }

    public override void WriteJson (JsonWriter writer, object value, JsonSerializer serializer)
    {
      JArray a = new JArray ();
      RowTargetTotal row = (RowTargetTotal) value;
      a.Add (row.target);
      a.Add (row.total);
      a.WriteTo (writer);
    }
  }
}